name: CI/CD
on:
  workflow_dispatch:
  push:
    branches-ignore: [main, e2e]

concurrency:
  group: tests
  cancel-in-progress: true

jobs:

  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch  
      - name: Checkout API Branch
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.extract_branch.outputs.branch }}
      - uses: dorny/paths-filter@v2
        id: filter-changes
        with:
          filters: |
            api:
              - 'api/**'
            web:
              - 'web/**'
    outputs:
      api-changed: ${{ steps.filter-changes.outputs.api }}
      web-changed: ${{ steps.filter-changes.outputs.web }}

  api-tests:
    name: Api CI Tests
    needs: [detect-changes]
    if: needs.detect-changes.steps.filter-changes.outputs.api == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
        
      - name: Checkout API Branch
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.extract_branch.outputs.branch }}

      - name: Setup PostgreSQL
        run: |
          sudo service postgresql start
          sudo -u postgres psql -c "CREATE DATABASE ${{ secrets.CI_TESTS_DB_NAME }}"
          sudo -u postgres psql -c "CREATE USER ${{ secrets.CI_TESTS_DB_USER }} WITH ENCRYPTED PASSWORD '${{ secrets.CI_TESTS_DB_PASS }}'"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE ${{ secrets.CI_TESTS_DB_NAME }} TO ${{ secrets.CI_TESTS_DB_USER }}"          

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'maven'

      - name: Run Unit + Integration Tests
        working-directory: ./api
        run: 'mvn clean install'

  web-tests:
    name: Web CI Tests
    needs: [detect-changes]
    if: needs.detect-changes.steps.filter-changes.outputs.web == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Checkout feature branch
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.extract_branch.outputs.branch }}

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'npm'
          cache-dependency-path: ./web/package-lock.json

      - name: Build
        working-directory: ./web
        run: npm ci

      - name: Run Tests
        working-directory: ./web
        run: npm run test

      - uses: dorny/paths-filter@v2
        id: filter-changes
        with:
          filters: |
            web:
              - 'web/**'

  echo-changes:
    name: echo changes
    runs-on: ubuntu-latest
    needs: [detect-changes]
    steps:
      - name: Echo api changes
        run: echo "api_changed = `${{ needs.detect-changes.outputs.api }}`"

      - name: Echo api equality
        run: echo "`${{ needs.detect-changes.outputs.api }}` == 'true'"

      - name: Echo web changes
        run: echo "web_changed = `${{ needs.detect-changes.outputs.web }}`"

      - name: Echo web equality
        run: echo "`${{ needs.detect-changes.outputs.web }}` == 'true'"
  
  deploy-vercel:
    name: Deploy web to Vercel
    runs-on: ubuntu-latest
    needs: [web-tests]
    environment:
      name: web TESTING
      url: ${{ steps.deploy.outputs.preview-url }}
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
        
      - name: Checkout API Branch
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.extract_branch.outputs.branch }}
  
      - name: "Deploy to vercel dev"
        id: deploy
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_ORG_ID }} 
          vercel-args: '-b REACT_APP_API_URL=${{ secrets.API_URL }}'
    outputs:
      preview-url: ${{ steps.deploy.outputs.preview-url }}